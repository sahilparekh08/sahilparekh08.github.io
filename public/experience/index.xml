<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Experience on Sahil Parekh</title>
    <link>//localhost:1313/experience/</link>
    <description>Recent content in Experience on Sahil Parekh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/experience/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>University of Pennsylvania</title>
      <link>//localhost:1313/experience/upenn/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/experience/upenn/</guid>
      <description>&lt;h3 id=&#34;role&#34;&gt;Role&lt;/h3&gt;
&lt;p&gt;I was a Research Assistant with Dr. Linh Thi Xuan Phan where I studied and built scheduling algorithms on Linux based multi-core platforms for safely scheduling real-time tasks during Summer 2024. Her I gained experience on writing and debugging kernel code, building system calls and developing and testing new kerbel scheduling policies such as EDF. I also utilised technologies like Memguard and Intel-CAT for resource allocation and management between tasks running on the kerbel.&lt;/p&gt;</description>
      <content>&lt;h3 id=&#34;role&#34;&gt;Role&lt;/h3&gt;
&lt;p&gt;I was a Research Assistant with Dr. Linh Thi Xuan Phan where I studied and built scheduling algorithms on Linux based multi-core platforms for safely scheduling real-time tasks during Summer 2024. Her I gained experience on writing and debugging kernel code, building system calls and developing and testing new kerbel scheduling policies such as EDF. I also utilised technologies like Memguard and Intel-CAT for resource allocation and management between tasks running on the kerbel.&lt;/p&gt;
&lt;p&gt;I have also served as a Teaching Assistant for the following courses:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CIS 3310 (Fall 2023 and CIS 5510 (Spring 2024) Networks and Security course instructed by Dr. Sebastian Angel&lt;/li&gt;
&lt;li&gt;CIS 5050 (Fall 2024) Software Systems course instructed by Dr. Linh Thi Xuan Phan&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>JP Morgan Chase &amp; Co.</title>
      <link>//localhost:1313/experience/jpmc/</link>
      <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/experience/jpmc/</guid>
      <description>&lt;h3 id=&#34;role&#34;&gt;Role&lt;/h3&gt;
&lt;p&gt;I started my journey with JP Morgan Chase &amp;amp; Co. in their investment banking regulatory reporting department as an intern during my last undergraduate semester. I started by understanding the domain of regulatory reporting and the trade life cycle. Since our team handled real-time regulatory reporting for the investment firm, I got to work on real-time low-latency systems, streaming and batch frameworks and cloud microservice architectures with multiple scalable components. I also worked on its own custom streaming and batch framework to gain a processing throughput of about 4 million messages a day with a average of 0.17 seconds of end-to-end latency per message. We also used docker and Kubernetes to deploy most of our microservices on cloud and some services on our data centers as required by regulatory authorities. There is also a complex networking structure in a hybrid network. With developing these models from scratch, I learnt a lot about system design, analysing frameworks, streaming and batch systems and how to find, analyse and remediate performance bottlenecks.&lt;/p&gt;</description>
      <content>&lt;h3 id=&#34;role&#34;&gt;Role&lt;/h3&gt;
&lt;p&gt;I started my journey with JP Morgan Chase &amp;amp; Co. in their investment banking regulatory reporting department as an intern during my last undergraduate semester. I started by understanding the domain of regulatory reporting and the trade life cycle. Since our team handled real-time regulatory reporting for the investment firm, I got to work on real-time low-latency systems, streaming and batch frameworks and cloud microservice architectures with multiple scalable components. I also worked on its own custom streaming and batch framework to gain a processing throughput of about 4 million messages a day with a average of 0.17 seconds of end-to-end latency per message. We also used docker and Kubernetes to deploy most of our microservices on cloud and some services on our data centers as required by regulatory authorities. There is also a complex networking structure in a hybrid network. With developing these models from scratch, I learnt a lot about system design, analysing frameworks, streaming and batch systems and how to find, analyse and remediate performance bottlenecks.&lt;/p&gt;
&lt;h3 id=&#34;positions&#34;&gt;Positions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Software Engineer II             (Feb 2023 - Jul 2023)&lt;/li&gt;
&lt;li&gt;Software Engineer I              (Aug 2020 - Jan 2023)&lt;/li&gt;
&lt;li&gt;Software Engineer Intern         (Jan 2020 - Jul 2020)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some of the technologies I used extensively:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Languages: Java, SQL, bash, Python&lt;/li&gt;
&lt;li&gt;Frameworks and Technologies: Spring, JUnit, Mockito, Apache Kafka, FIX Engine, MongoDB, EhCache, Oracle BDB, Hadoop, Oracle Exadata&lt;/li&gt;
&lt;li&gt;Tools: Docker, Kubernetes, AWS, Jenkins, Control-M, Splunk, Dynatrace, Gradle, Maven, Git&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
  </channel>
</rss>
